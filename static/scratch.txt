        // if(!collision(player,socket.id,players)){
        //     if (data.left ) {
        //         if(player.x>0){
        //             player.x -= 5;
        //         }
        //         else{
        //             player.x=495;
        //         }
        //     }
        //     if (data.up) {
        //         if(player.y>0){
        //             player.y -= 5;
        //         }
        //         else{
        //             player.y=495;
        //         }
        //     }
        //     if (data.right) {
        //         if(player.x<500){
        //             player.x += 5;
        //         }
        //         else{
        //             player.x=5;
        //         }
        //     }
        //     if (data.down ) {
        //         if(player.y<500){
        //             player.y += 5;
        //         }
        //         else{
        //             player.y=5;
        //         }
        //     }
        // }
        // else{
        //     if (data.left ) {
        //         if(player.x>0){
        //             player.x += 50;
        //         }
        //         else{
        //             player.x=495;
        //         }
        //     }
        //     if (data.up) {
        //         if(player.y>0){
        //             player.y += 50;
        //         }
        //         else{
        //             player.y=495;
        //         }
        //     }
        //     if (data.right) {
        //         if(player.x<500){
        //             player.x -= 50;
        //         }
        //         else{
        //             player.x=5;
        //         }
        //     }
        //     if (data.down ) {
        //         if(player.y<500){
        //             player.y -= 50;
        //         }
        //         else{
        //             player.y=5;
        //         }
        //     }
        // }






<!-- <form>
<div class="form-group">
<label for="exampleFormControlSelect1">Select Tagger</label>
<select class="form-control" id="exampleFormControlSelect1">
        <option value="1">1</option>
        <option value="2">2</option>
        <option value="3">3</option>
        <option value="4">4</option>
        <option value="5">5</option>
</select>
</div>
<input type="submit" class="float-right btn btn-success mt-1" value="start" id="start">
</form>
<input type="button" class="float-right btn btn-primary mt-1" value="reset" id="resetGame"> -->





    // var stopwatch;
    // function startTimer(){
    //     let x=Date.now()
    //     let result=0;
    //     stopwatch=setInterval(function(){
    //         result=Date.now()-x;
    //         $('#timer').text(result);
    //     })
    // }

    // function stopTimer(){
    //     var taggerScore=$('#stopwatch').text()
    //     clearInterval(stopwatch);
    //     $('#timer').text(0)
    //     return taggerScore;
    // }

    // socket.on('startTimer', function(data){
    //     if(data){
    //         startTimer();
    //     }
    // })




        // socket.on('display',function(data){
    //     if(data){
    //         $('#display').text('');
    //         data.forEach(element => {
    //             $('#display').append(`<ul>${element.name}: ${element.tags} players tagged in ${element.time} seconds</ul>`);
    //         });
    //     }
    // })



    // function displayScore(){
    //     Score.aggregate([{$group:{_id:"$tags",minTime:{$min:"$time"}}},{$sort:{_id:1}}])
    //         .then(data=>{
    //             let result=[];
    //             for(let one of data){
    //                 console.log(one._id+"  "+one.minTime)
    //                 Score.find({$and:[{tags:one._id},{time:one.minTime}]})
    //                     .then(data=>{result.push(...data)
    //                         console.log(data.name+"**************")
    //                         console.log(result+"###########")
                                Promise.resolve(result)
    //                     })

    //                     console.log(result+"/////////")
    //             }
    //             console.log(result+"---------")s
    //             socket.emit('display',result)
    //         })
    //         .catch(err=>console.log(err))
    // }

    
        // function getResult(data){
    //     return new Promise((resolve, reject) =>{
    //         let result=[];
    //         for(let i=0; i< data.length; i++){
    //             const one = data[i];
    //             console.log("i value outside then: "+i)
    //             console.log(one._id+"  "+one.minTime)
    //             Score.find({$and:[{tags:one._id},{time:one.minTime}]})
    //                 .then(data=>{result.push(...data)
    //                     if (i === data.length - 1){
    //                         console.log("i value: "+i)
    //                         // done going throught the data
    //                         resolve(result)
    //                     }
    //                 })
    //         }
    //     })
    // }    
    
    // function displayScore(){
    // Score.aggregate([{$group:{_id:"$tags",minTime:{$min:"$time"}}},{$sort:{_id:1}}])
    //     .then(data=>{
    //         getResult(data)
    //         .then(result => {
    //             console.log(result+"*****")
    //             socket.emit('display',result)
    //         })
            
    //     })
    //     .catch(err=>console.log(err))
    // }




        // function displayScore(){
    //     Score.aggregate([{$group:{_id:"$tags",minTime:{$min:"$time"}}},{$sort:{_id:1}}])
    //         .then(data=>{socket.emit('display',data)})
    //         .catch(err=>console.log(err))
    // }